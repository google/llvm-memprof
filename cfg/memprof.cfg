#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):     LLVM/3.9.0
#    Operating system(s):     Linux
#    Hardware:                AMD64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries 
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label mytest                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 128      #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64   
%elif %{bits} == 32
%   define model        -m32   
%else
%   error Please define number of bits - see instructions in config file
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

#backup_config          = 0                     # Uncomment for cleaner config/ directory
flagsurl01              = $[top]/config/flags/gcc.xml
flagsurl02              = $[top]/config/flags/clang.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv

preenv                  = 1
tune                    = base,peak

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the 
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might 
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes 
%define  cpucores       4      #         number of physical cores
%define  cputhreads     8      #         number of logical cores
%define  numanodes      1      #         number of NUMA nodes for affinity

intrate,fprate:
   copies                  = %{cpucores}      
intspeed,fpspeed:
   threads                 = %{cputhreads}   

#-------- CPU binding for rate -----------------------------------------------
# When you run multiple copies for SPECrate mode, performance
# is improved if you bind the copies to specific processors.  EDIT the numactl stuff below.

intrate,fprate:
submit       = echo "$command" > run.sh ; $BIND bash run.sh

# Affinity settings:                     EDIT this section
# Please adjust these values for your 
# particular system as these settings are 
# for an 8 core, one NUMA node (-m 0) system.
bind0	= numactl -m 0 --physcpubind=0
bind1	= numactl -m 0 --physcpubind=1
bind2	= numactl -m 0 --physcpubind=2
bind3	= numactl -m 0 --physcpubind=3
bind4	= numactl -m 0 --physcpubind=4
bind5	= numactl -m 0 --physcpubind=5
bind6	= numactl -m 0 --physcpubind=6
bind7	= numactl -m 0 --physcpubind=7

# EDIT to add additional cores and NUMA nodes as necessary
# bind8	        = numactl -m 1 --physcpubind=8
# bind9	        = numactl -m 1 --physcpubind=9
# bind10	= numactl -m 1 --physcpubind=10
# bind11	= numactl -m 1 --physcpubind=11
# bind12	= numactl -m 1 --physcpubind=12
# bind13	= numactl -m 1 --physcpubind=13
# bind14	= numactl -m 1 --physcpubind=14
# bind15	= numactl -m 1 --physcpubind=15
#
# bind16	= numactl -m 2 --physcpubind=16
# bind17	= numactl -m 2 --physcpubind=17
# bind18	= numactl -m 2 --physcpubind=18
# bind19	= numactl -m 2 --physcpubind=19
# bind20	= numactl -m 2 --physcpubind=20
# bind21	= numactl -m 2 --physcpubind=21
# bind22	= numactl -m 2 --physcpubind=22
# bind23	= numactl -m 2 --physcpubind=23
#
# bind24	= numactl -m 3 --physcpubind=24
# bind25	= numactl -m 3 --physcpubind=25
# bind26	= numactl -m 3 --physcpubind=26
# bind27	= numactl -m 3 --physcpubind=27
# bind28	= numactl -m 3 --physcpubind=28
# bind29	= numactl -m 3 --physcpubind=29
# bind30	= numactl -m 3 --physcpubind=30
# bind31	= numactl -m 3 --physcpubind=31
#
# bind32	= numactl -m 4 --physcpubind=32
# bind33	= numactl -m 4 --physcpubind=33
# bind34	= numactl -m 4 --physcpubind=34
# bind35	= numactl -m 4 --physcpubind=35
# bind36	= numactl -m 4 --physcpubind=36
# bind37	= numactl -m 4 --physcpubind=37
# bind38	= numactl -m 4 --physcpubind=38
# bind39	= numactl -m 4 --physcpubind=39
#
# bind40	= numactl -m 5 --physcpubind=40
# bind41	= numactl -m 5 --physcpubind=41
# bind42	= numactl -m 5 --physcpubind=42
# bind43	= numactl -m 5 --physcpubind=43
# bind44	= numactl -m 5 --physcpubind=44
# bind45	= numactl -m 5 --physcpubind=45
# bind46	= numactl -m 5 --physcpubind=46
# bind47	= numactl -m 5 --physcpubind=47
#
# bind48	= numactl -m 6 --physcpubind=48
# bind49	= numactl -m 6 --physcpubind=49
# bind50	= numactl -m 6 --physcpubind=50
# bind51	= numactl -m 6 --physcpubind=51
# bind52	= numactl -m 6 --physcpubind=52
# bind53	= numactl -m 6 --physcpubind=53
# bind54	= numactl -m 6 --physcpubind=54
# bind55	= numactl -m 6 --physcpubind=55
#
# bind56	= numactl -m 7 --physcpubind=56
# bind57	= numactl -m 7 --physcpubind=57
# bind58	= numactl -m 7 --physcpubind=58
# bind59	= numactl -m 7 --physcpubind=59
# bind60	= numactl -m 7 --physcpubind=60
# bind61	= numactl -m 7 --physcpubind=61
# bind62	= numactl -m 7 --physcpubind=62
# bind63	= numactl -m 7 --physcpubind=63


#------- Compilers ------------------------------------------------------------
default:
#                                      EDIT paths to LLVM and libraries:
    BASE_DIR           = /usr/local/google/home/weingartenmatt/Workspace/
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]/llvm-project/
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]/build
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    DRAGONEGG_PATH     = $[LLVM_PATH]/dragonegg
    DRAGONEGG_SPECS    = $[DRAGONEGG_PATH]/integrated-as.specs
    # DragonEgg version 3.5.2 requires GCC version 4.8.2.
    # EDIT LLVM_GCC_DIR to reflect the GCC path.
    LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    # Specify Intel OpenMP library path.
    OPENMP_DIR         = $[BASE_DIR]/lib/libomp_oss/exports
   
    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = $(LLVM_BIN_PATH)/clang %{model}
    CXX                 = $(LLVM_BIN_PATH)/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/gfortran
    FC                  = $(FORTRAN_COMP) %{model}
    CLD                 = $(LLVM_BIN_PATH)/clang %{model}
    FLD                 = $(LLVM_BIN_PATH)/clang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the 
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same 
%else                                 # options, so we add them to all of 
    LDCFLAGS        = -z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix} 

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG 
   FPORTABILITY  = -fconvert=big-endian 

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char 
    CXXPORTABILITY = -D__BOOL_DEFINED 

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian 

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -mllvm -memprof-use-callbacks=true -fuse-ld=lld -Wl,--no-rosegment -gmlt -fdebug-info-for-profiling -mno-omit-leaf-frame-pointer -fno-omit-frame-pointer -fno-optimize-sibling-calls -m64 -Wl,-build-id -no-pie -fmemory-profile=. -fprofile-generate=. 
    CXXOPTIMIZE   =  -O2 -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -Wno-c++11-narrowing -Wno-reserved-user-defined-literal -fmemory-profile=. -memprof-use-callbacks=true
    FOPTIMIZE     = -O2  -memprof-use-callbacks=true  -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -fmemory-profile=. -fprofile-generate=. 
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so
    EXTRA_FLIBS   = -lgfortran -lm
    LDOPTIMIZE    = -z muldefs
intrate,fprate:
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp -Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include
       EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
      #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
      #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 128M
       preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     =  -O2 -mllvm -memprof-use-callbacks=true -fPIC -fuse-ld=lld -Wl,--no-rosegment -gmlt -fdebug-info-for-profiling -mno-omit-leaf-frame-pointer -fno-omit-frame-pointer -fno-optimize-sibling-calls -m64 -Wl,-build-id -no-pie -fmemory-profile=. -fprofile-generate=. 
    CXXOPTIMIZE   = -O2 -mllvm -memprof-use-callbacks=true -fPIC -fuse-ld=lld -Wl,--no-rosegment -gmlt -fdebug-info-for-profiling -mno-omit-leaf-frame-pointer -fno-omit-frame-pointer -fno-optimize-sibling-calls -m64 -Wl,-build-id -no-pie -fmemory-profile=. -fprofile-generate=.
    FOPTIMIZE     = -O2 -mllvm -memprof-use-callbacks=true -fPIC -fuse-ld=lld -Wl,--no-rosegment -gmlt -fdebug-info-for-profiling -mno-omit-leaf-frame-pointer -fno-omit-frame-pointer -fno-optimize-sibling-calls -m64 -Wl,-build-id -no-pie -fmemory-profile=. -fprofile-generate=. 
    EXTRA_FLIBS   = -lgfortran -lm
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

502.gcc_r,602.gcc_s=peak:  #lang='C'                        
    LDOPTIMIZE    = -z muldefs    

521.wrf_r,621.wrf_s=peak:  #lang='F,C'                      
    COPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx
    EXTRA_FLIBS   = -lgfortran -lm
    FOPTIMIZE     = -O3 -freciprocal-math -ffp-contract=fast -mavx -funroll-loops
    EXTRA_FFLAGS  = -fplugin=$(DRAGONEGG_PATH)/dragonegg.so

523.xalancbmk_r,623.xalancbmk_s=peak:  #lang='CXX           
    CXXOPTIMIZE   = -O3 -mavx

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++: Version 3.9.0 of Clang, the
   sw_compiler002   = LLVM Compiler Infrastructure 
   sw_compiler003   = Fortran: Version 4.8.2 of GCC, the
   sw_compiler004   = GNU Compiler Collection   
   sw_compiler005   = DragonEgg: Version 3.5.2, the
   sw_compiler006   = LLVM Compiler Infrastructure
#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number)
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
 # hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
 # hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
 # hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC 
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
 # sw_file            = # ext99                               # File system
 # sw_os001           = # Linux Sailboat                      # Operating system
 # sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
 # sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 

__HASH__
519.lbm_r=peak=mytest-m64:
# Last updated 2024-04-27 00:22:02
opthash=3d43ecd209ae524dddf36d1c2659ed7efe6a94bc4f20c9657fa0f475bf825a80
baggage=
compiler_version=\
@eNqdkMtOwzAQRff5Ci9BpXHzaELCpiI81A1FtIJl5dhT19SxI8duI74eh1eF6IrF3LF0rz1njKpq\
/Xz7tJwvHtaLx5VvZUAlURztwXRCKxQV4SSccGHRmZeZr62rQ6qbsiHWHkAoTowFhaXcN+PW6Feg\
NhzyeQ2bNC1oXdA8npIkSvMspwkhtJhmAFm8YSSmSXQerIjhYEvUX2brLB07tVP6oMZSKNePuXLB\
amuAMNRoBrJEre5EH8xVZ4mUwG6EKRF2ncFSUyIx15pLwFvdAD7yDbT4RZtd1xIKv2hx7YRkuBYq\
uB5OiGq1EbxEI6d0a0Uj3oBdoBHpOjDWf0oX3GmnfI4oJhixgO6rColPIDIkvoFEjTml+Guxn4Vw\
lARLkH42sP/crX4GN05a4aMlCq9mTZaetJLYe0l80us/TK9HoD9vvgN9w7xK
compile_options=\
@eNq1UV1vgjAUfedXNH3HumRbMqMmgEzZgDYC2cdLg1gZs1BTitv+/YpjThKzN/vSNvfcc+85JxSV\
WaZbtik4A2KnClHVI6NWssgUlU21LiTdM1lsvibwChr6WWvIBA4Hd8MbaBgODsgIQNTUEnGRpRzl\
QuScoTdRMvTBiipPpWJVmSqFnoTc1rs0Ywhxvi/NnRTvLFMIrZqCr9GqqFDG0yoHZnl7DcwMmOJ3\
p4EA5iwirqOvcObaybz7UyuJMY0SQpZuFFFM3DAgAAATb9JaaaZ0/wl6p+vziZ4BxrVoZMam0HBG\
wHEml1Dyw43tB0ziCezJgoZ2zyHJvW/NI13rSzxUbTd0FrQHOKsZGridQmIv8F5dDT0x4EDkPsdL\
ixK8jC3b87345UjXWgEN3wsfLxRlZ/y5SMZi1TbW0xbAy7+Ujh4BcDDQn10onP9s03MDK15Q37Nb\
93nZrYKTNsmTGL8Bb4sGwA==
exehash=b0771d31fcf18ed7dac716e7691d92819712f2f9a23800fafeda26850fa1c053

500.perlbench_r=peak=mytest-m64:
# Last updated 2024-04-29 00:53:08
opthash=b12221a25c456d2e0bde0bb7aca1591be7c0d6876968058a1a3e3578fe80faed
baggage=
compiler_version=\
@eNrFVWtP2zAU/Z5fcbVPIOaEPihrJhBa9xDSNKaBto+RY98kHn5UttOW/frdtBTKcwihITWP5h5f\
n3ts3wOTSfHz04/T45Nvxcn3M3rkidDc1jBDH5Sz0Bunu+lurSJs0e2IrqYtU+FMbniMc1S25j6i\
zbSeGTb17jeKmHb4/RKr4XAsyrHY7+/xQW+4P9oXA87FeG+EOOpXkvfFoLednHFfY8xh8W5UjIas\
tefWzS3TyrYLVts2OWs8cgnGSdQ5TF1Qi+TYhsi1RvlR+RyyNvhMO8F1VjtXa8waZzC75texzX45\
fx6mXOANtlnZKi2zUtnkQ/cGwtlK1TnstNZNozLqD8q3sMNDQB9JlJB8dq0lHLdSSR4RvkwmoFaE\
eIdYE1JlVguRXRZ2VVDWGySnqGlulM8ZO7ma2LQ6KoLmkL4/MqPhvaFBn2KD/r2xxTJI92tCd3LC\
m5eRN9My1Vq+AcYaHhoW4oXGA6qJPmDDKs8NskZ6YAZQV8WqdGDywnKjRKfBOXropBkNKdmlKARj\
o2EaXNoH5oCnro1L0F3thI+91D0cVF3wH+p3uBJrZQnLvr6AMt1cy0OX9cabzO6cg6vpHib3BEiW\
pte/pZTdoPsUWX/fxK2T34ddx27l3QjRQs8bp5FxLxo1Q/if8nXBJbDwMTVoKE2VcqJk3S1WbGPL\
hXjw+iTTcGHCM3bbTSrXXFZFexewNmgjsGWEKQmsLYpuUNFNrDQWvrXUAl9xpS6JrFeKB2YRJfUp\
pqdxZQxMe6pBG7qk7v5hcHpGL3QEaNTmEPpShLuZxNPBT+kPaOVjbYZaR7LqhTmg944MjPwEK2Up\
Py116cjmDCdDOjw8BI8VerSCYuXFo40t3yrIR3zcXpn4VfLLxkmubcgCoOKkp4Q5eTnggqxakLFC\
D7baQHt/BtFBQCRTmtFyd5a0nfwFtFDTwQ==
compile_options=\
@eNrtVE1vnDAQve+vsDjXcVpVkRqFSCzrzdKya8SHkvZisWCoG4NXNiRNfn3HZDcfUi495FClSMD4\
+ckevzeeje5xV16LRiqB9G6QurenMzsYWQ3cjH0tDb8RRjZ3vvfRm0FogeJ7x0dfjk+82Sxk6+QU\
eWS0hihdlYq0WrdKkJ+6E+RWyL4tzSD6rhwGcqnNtd2VlSBEqZsO74z+JaqBkO0oVU22sieVKvsW\
4e7kM8IVwvqQ05FGeJElNITfZkHnxQUECU1jHrKUIhwdwVtLO5CIQVTtyp7kshN4JVNhD8gqX8c4\
KY0VBiDxeyBGQGB3ojJlX8OSC1bMY8qzOMhWNONuxyiI/eP97jwocsazIklSmmWcJXSzTmCOx0F6\
Qfkyimn2OHQjnrEiDanDpiFbLjOa83mUZz6cESHMPsFxnRzwEx1I0uDRCgxSqm1ZXVt/MCMk2ThQ\
1b5SkOal+oBxr7HRVrSd6AeE207Bt6nFdmyx7BuNG22cwuCsnCQFvu7kgJUoG9yYEsTZadkPTovm\
MPkaDg508l5gK7duqSk1u/fIZTK5hyXkBeyddMnCSbS5228vfDCn2ce4Fb0w5eDAh2evbBxtiit+\
NYnyHE4ccmb1aCpx7s3CUxSG/lsU3MPabP6VJbnvvag+bwZFHibFMg4uMph7WYnT7JxuwhV/JPzz\
penNmFMjyaN19IPCkd5vnU7+JizNg3kUR/n3QwE8lezEoFd5GvBXeYmjAPvbG7VKhO9RN6paNPbh\
7rzvpvJqRznTW6egPXcE1aHD83TLEZpaQLx4o/bC3NrhoUU8Ovb/pv3VTQOH1kG+AmjuZFTd3jRW\
uK79rGX/AVQx5RA=
exehash=fc390dd7d74446592c5f6a464cb85f18378120d747f8416c2b8905773069e0d2

505.mcf_r=peak=mytest-m64:
# Last updated 2024-04-30 19:25:14
opthash=409d166f59838925b8d71c8e63626ace130f5361ca6f3185a82e57b1de798814
baggage=
compiler_version=\
@eNrFVWtP2zAU/Z5fccUnEHPSlwrNBELrHkKaxjTQ9jFy4pvEw4/Kdkq7X7+blpZCC0MIDalJXN/j\
6+Nj+x4Yj7Ofn35cnl98yy6+X9EnjQrFTQVTdF5aA91R3Ik7lQywT68zeuomjwurU81DuEFpKu4C\
mkSpqWYTZ39jEeIW3x0UIxS8Uw56x8di1C37ucCjfodaR+XRqFcej0a9zrB/EF1xV2FIYXY8zIYD\
1phrY28MU9I0M1aZJrqqHXIB2gpUKUysl7Po3PjAlULxUboUksa7RNmCq6SytlKY1FZjcsevZZv8\
su7aT3iB99gmeSOVSHJpog9tCwprSlmlcNgYOwlSyz8o3sEh9x5dIFF89Nk2hnDcCCl4QPgyHoNc\
EuItYkVI5klVFMntwtYLSrr96BIVzY3iJWPH64l1o4IkaArx+zM9HOwM9XsU6/d2xmaLIL3vCG3l\
hL3XkTdRIlZK7AFjNfc182Gu8ITWRB1Ys9JxjawWDpgGVGW2XDowMTdcy6LV4BodtNIMB5TsVhSC\
seEg9jbuAbPAY9uEBWhbu8KFbmwfD8o2+A/1W1yOlTSEZV9fQZl2rsWlS7qjTWZb92A93ePkngFJ\
4vjut5CyHbRLkVX/Jm6VfBd2FXuQdyNEG31TW4WMu6KWU4T/KV8bXAAzF2KNmtKUMSdKxj5gxTaO\
nA8nb08y9nPtX3Da7lO547JctLMeK40mAFtEmBTAmixrB2XtxFJh5hpDJfANd+qWyGqnuGcGUVCd\
YmoSlsbAlKM1KE2PUO0/9FZNqUFXgEZtDqGezG9nKp4Pfk59QCOeKjNUOqJlLUwBnbNkYOQnWEpD\
+Wmrc0s2pzkZ0unpKTgs0aEpKJbPnyxs6X5GPuLCwdLE18lvCye5tiYLgJKTngJuyMsBZ2TVBRkr\
dGG/8XT2pxAseEQypSltd2tJB9FfpCTTGA==
compile_options=\
@eNrtVE2P0zAQvedXWDnjekGAxGqzUpuG3UDaRG2qBS5RPibB1B/Bdhbt/nrsbFq2EgcuPbE5xNbM\
eObNGz+vpcC83ENLGSDZGyqFvvS0UbQ2hRpEQ1VxD4q2D4H/2vfsVtuQwL+Yfbh453temK6yS+ST\
QSvCZF0y0knZMSDfJQfyC6joSmVA8NIYcifVXvdlDYQwds9xr+QPqA0h1UBZQyoqSM1K0SHM379F\
uEZYHjDNJMLLbRaFdlkvo8XuBiEc6x7q4qeWykzeYr7L02K7y7JNtN0WaRatV5mNTN/YnK6mXYDb\
ui0eNGCLl1VlvdeBUQMg3DojawLGGoTv2CuMhcRKaug4CFuj48z+2waqocNUtBK3Urk2LH10xG3j\
JacGMyhb3KqSA+4lFQaUPXdw/s1u2+T0EbCmlUs1QtMTEQ7JSBGmFpeN7qkDazuR6mEqD8HMmqY9\
7kCAKo0znnwTS0lm06IrLQdVw7XvhZcoDINzTPEpd7r4lGZ54J+M1PfszQmz3cdkfrO1vtPxjt5F\
tA5vi/AQ8Y/z9r3U1czyeBV/i+y5/3f6I4vRl3wzL7J0k88XcRLnXw9kj/fA95J4/flMGkb4EfGB\
NdDqp/v3IkR0JSvHmL52fDD+R5tHZSA0yiZZnkmSqct9VNVxQi+6eaYby/9qnt8WSbxwJDE+jSTd\
uXfs2SP2GzgRb1I=
exehash=0e4be6fd8bd525699b2dca34e6dcbfb5bea57c7f03901fdb31d9cdd74f1c5d81

